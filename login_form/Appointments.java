/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package login_form;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import java.util.Date;
import java.util.Locale;
/**
 *
 * @author aryannair
 */
public class Appointments extends javax.swing.JFrame {
Connection con=null;
PreparedStatement pst = null;
ResultSet rs= null;
SimpleDateFormat Date=new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault());
Date dateobj = new Date();
String Cd = Date.format(dateobj);
/**
     * Creates new form Appointments
     */
    public Appointments() {
        initComponents();     
        showTableData();
        updateCombo();
        updateCombo2();
        updateCombo3();
        getMobile();
        checkNow();
        Toolkit toolkit=getToolkit();
        Dimension size= toolkit.getScreenSize();
        setLocation(size.width/2-getWidth()/2,size.height/2-getHeight()/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jComboBox6 = new javax.swing.JComboBox<>();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        Search = new javax.swing.JButton();
        Search1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jbtnReports = new javax.swing.JButton();
        jbtnAddUser = new javax.swing.JButton();
        jbtnService = new javax.swing.JButton();
        jbtnEmployee = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jbtnInvoice = new javax.swing.JButton();
        jbtnCustomer = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 153, 0));
        setForeground(new java.awt.Color(255, 153, 0));
        setSize(new java.awt.Dimension(247, 60));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 17)); // NOI18N
        jLabel1.setText("Client Name:");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 17)); // NOI18N
        jLabel2.setText("Employee Name:");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 17)); // NOI18N
        jLabel4.setText("Start Time:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 17)); // NOI18N
        jLabel5.setText("Service Type:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 110, -1));

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 17)); // NOI18N
        jLabel6.setText("Mobile Number:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        jTextField5.setFont(new java.awt.Font("Lucida Grande", 0, 17)); // NOI18N
        jTextField5.setText("-");
        jPanel3.add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, 310, -1));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 0, 17)); // NOI18N
        jLabel7.setText("Daily Notes");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, -1, -1));
        jPanel3.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 440, 310));

        jDateChooser1.setDateFormatString("MMM dd, yyyy");
        jPanel3.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 190, -1));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel8.setText("Date:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 60, 20));

        jComboBox1.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ""}));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 340, -1));

        jButton6.setText("Update");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 270, -1, -1));

        jButton1.setText("Insert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 270, -1, -1));

        Delete.setText("Save");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        jPanel3.add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 660, -1, -1));

        jComboBox2.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"Anyone"}));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 310, 30));

        jComboBox3.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Undecided" }));
        jPanel3.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 330, -1));

        jComboBox4.setFont(new java.awt.Font("Lucida Grande", 0, 15)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00"}));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 350, -1));

        jButton3.setText("Autofill Mobile");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, -1, -1));

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setText("ID:");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, -1));

        jTextField1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jPanel3.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 140, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Employee Name", "Start Time ", "Date", "Service No", "Mobile No"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel3.setText("Appointments");

        jLabel10.setText("Client:");

        jLabel11.setText("Employee:");

        jLabel12.setText("Date:");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"-"}));
        jComboBox5.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox5ItemStateChanged(evt);
            }
        });

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"-"}));
        jComboBox6.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox6ItemStateChanged(evt);
            }
        });

        jDateChooser2.setDateFormatString("MMM dd, yyyy");

        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        Search1.setText("Refresh");
        Search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Search)
                .addGap(48, 48, 48)
                .addComponent(Search1)
                .addGap(209, 209, 209))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Search)
                    .addComponent(Search1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11)
                        .addComponent(jLabel12)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addGap(7, 7, 7)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 153, 0));

        jbtnReports.setBackground(new java.awt.Color(255, 206, 158));
        jbtnReports.setText("Reports");
        jbtnReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnReportsActionPerformed(evt);
            }
        });

        jbtnAddUser.setBackground(new java.awt.Color(255, 206, 158));
        jbtnAddUser.setText("Add New User");
        jbtnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddUserActionPerformed(evt);
            }
        });

        jbtnService.setBackground(new java.awt.Color(255, 206, 158));
        jbtnService.setText("Service Master");
        jbtnService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnServiceActionPerformed(evt);
            }
        });

        jbtnEmployee.setBackground(new java.awt.Color(255, 206, 158));
        jbtnEmployee.setText("Employee Master");
        jbtnEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEmployeeActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 206, 158));
        jButton5.setText("Appointments");

        jbtnInvoice.setBackground(new java.awt.Color(255, 206, 158));
        jbtnInvoice.setText("Invoice");
        jbtnInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInvoiceActionPerformed(evt);
            }
        });

        jbtnCustomer.setBackground(new java.awt.Color(255, 206, 158));
        jbtnCustomer.setText("Client Master");
        jbtnCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCustomerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnService, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnReports, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 150, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbtnReports, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jbtnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jbtnService, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jbtnEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jbtnInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jbtnCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCustomerActionPerformed
        NewCustomer cust= new NewCustomer();
        cust.setVisible(true);
    }//GEN-LAST:event_jbtnCustomerActionPerformed

    private void jbtnEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEmployeeActionPerformed
         NewEmployee emp= new NewEmployee();
         emp.setVisible(true);
    }//GEN-LAST:event_jbtnEmployeeActionPerformed

    private void jbtnServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnServiceActionPerformed
         NewService_1 serv= new NewService_1();
         serv.setVisible(true);
    }//GEN-LAST:event_jbtnServiceActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    try {
        int i = jTable1.getSelectedRow();
        DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
        SimpleDateFormat formatter5 =new SimpleDateFormat("yyyy-MM-dd");  
        Date date5=formatter5.parse((String)model.getValueAt(i,5));
        System.out.println((String)model.getValueAt(i,5));
        jTextField5.setText(String.valueOf(model.getValueAt(i,3)));
        jComboBox1.setSelectedItem(String.valueOf(model.getValueAt(i,0)));
        jComboBox2.setSelectedItem(String.valueOf(model.getValueAt(i,1)));
        jComboBox3.setSelectedItem(String.valueOf(model.getValueAt(i,2)));
        jComboBox4.setSelectedItem(String.valueOf(model.getValueAt(i,4)));
        jDateChooser1.setDate(date5);
        jTextField1.setText(String.valueOf(model.getValueAt(i,6)));
            } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, ex);
    }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        LocalDate fday = LocalDate.parse(Cd);
        LocalDate tday = LocalDate.parse(Date.format(jDateChooser1.getDate()));
        long day_gap = ChronoUnit.DAYS.between(fday, tday);
        if (day_gap>0){
        try{
            String sql = "INSERT INTO Appointments(date, client, employee, Service_Name, Mobile_No, Start_Time, id)VALUES (?,?,?,?,?,?,?)";
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/customers","root","root");
        pst=con.prepareStatement(sql);
        pst.setString(1,Date.format(jDateChooser1.getDate()));
        pst.setString(2,jComboBox1.getSelectedItem().toString());
        pst.setString(6,jComboBox4.getSelectedItem().toString());
        pst.setString(3,jComboBox2.getSelectedItem().toString());
        pst.setString(4,jComboBox3.getSelectedItem().toString());
        pst.setString(5,jTextField5.getText());
        pst.setString(7,jTextField1.getText());
      
        pst.executeUpdate();
        showTableData();
        JOptionPane.showMessageDialog(null, "Success");
        
        }
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }}
        else{
            JOptionPane.showMessageDialog(null,"Invalid date", "Logical Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        try{
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
        LocalDateTime now = LocalDateTime.now();
        String time = now.format(dtf);
            String sql = "INSERT INTO appNotes (note, Date)VALUES(?,?)";
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/customers","root","root");
        pst=con.prepareStatement(sql);
        pst.setString(2,time);
        pst.setString(1,jTextField6.getText());
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Success");
        }
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try{
        int row = jTable1.getSelectedRow();
        DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
        String sql = "UPDATE Appointments SET date=?, employee=?, Service_Name=?, client=?, Mobile_No=?, Start_Time=? WHERE id=?";
        con=DriverManager.getConnection("jdbc:mysql://localhost:3306/customers","root","root");
        pst=con.prepareStatement(sql);
        pst.setString(4,jComboBox1.getSelectedItem().toString());
        pst.setString(2,jComboBox2.getSelectedItem().toString());
        pst.setString(3,jComboBox3.getSelectedItem().toString());
        pst.setString(5,jTextField5.getText());
        pst.setString(6,jComboBox4.getSelectedItem().toString());
        pst.setString(1,Date.format(jDateChooser1.getDate()));
        pst.setString(7, jTextField1.getText());

        pst.executeUpdate();
        showTableData();
        JOptionPane.showMessageDialog(null, "Updated Successfully");
         //pst.executeQuery(sql);
        System.out.print("SQL:"+sql);
        }
        catch (Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jComboBox5ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox5ItemStateChanged

    }//GEN-LAST:event_jComboBox5ItemStateChanged

    private void jComboBox6ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox6ItemStateChanged

    }//GEN-LAST:event_jComboBox6ItemStateChanged

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        int x;
        try{
            System.out.println("jComboBox5.getSelectedItem().toString() = "+jComboBox5.getSelectedItem().toString());
            System.out.println("jComboBox6.getSelectedItem().toString() = "+jComboBox6.getSelectedItem().toString());
            try{
            System.out.println("jDateChooser2.getDate().toString() = "+new Date(jDateChooser2.getDate().getTime()).toString());
            }
            catch(NullPointerException npe)
            {
                jDateChooser2.setDate(new Date(1));
            }
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers","root","root");
            if (jComboBox5.getSelectedItem().toString().equalsIgnoreCase("-") && !jComboBox6.getSelectedItem().toString().equalsIgnoreCase("-") && !jDateChooser2.getDate().toString().equalsIgnoreCase(new Date(1).toString()))
                x = 1;
            else if (jComboBox5.getSelectedItem().toString().equalsIgnoreCase("-") && jComboBox6.getSelectedItem().toString().equalsIgnoreCase("-") && !jDateChooser2.getDate().toString().equalsIgnoreCase(new Date(1).toString()))
                x = 2;
            else if (jComboBox5.getSelectedItem().toString().equalsIgnoreCase("-") && jComboBox6.getSelectedItem().toString().equalsIgnoreCase("-") && jDateChooser2.getDate().toString().equalsIgnoreCase(new Date(1).toString()))
                x = 3;
            else if (!jComboBox5.getSelectedItem().toString().equalsIgnoreCase("-") && jComboBox6.getSelectedItem().toString().equalsIgnoreCase("-") && jDateChooser2.getDate().toString().equalsIgnoreCase(new Date(1).toString()))
                x = 4;
            else if (!jComboBox5.getSelectedItem().toString().equalsIgnoreCase("-") && jComboBox6.getSelectedItem().toString().equalsIgnoreCase("-") && !jDateChooser2.getDate().toString().equalsIgnoreCase(new Date(1).toString()))
                x = 5;
            else if (!jComboBox5.getSelectedItem().toString().equalsIgnoreCase("-") && !jComboBox6.getSelectedItem().toString().equalsIgnoreCase("-") && jDateChooser2.getDate().toString().equalsIgnoreCase(new Date(1).toString()))
                x = 6;
            else if(jComboBox5.getSelectedItem().toString().equalsIgnoreCase("-") && !jComboBox6.getSelectedItem().toString().equalsIgnoreCase("-") && jDateChooser2.getDate().toString().equalsIgnoreCase(new Date(1).toString()))
                x = 7;  
            else
                x = 8;
            System.out.println(x);
            switch(x)
            {
                case 1:
                    String sql = "SELECT * FROM Appointments WHERE employee=?, date=?";
                    pst = con.prepareStatement(sql);
                    pst.setString(1, jComboBox6.getSelectedItem().toString());
                    pst.setString(2, Date.format(jDateChooser2.getDate()));
                    rs=pst.executeQuery();
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    break;
                case 2:
                    sql = "SELECT * FROM Appointments WHERE date=?";
                    pst = con.prepareStatement(sql);
                    pst.setString(1, Date.format(jDateChooser2.getDate()));
                    rs=pst.executeQuery();
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    break;
                case 3:
                    showTableData();
                    break;
                case 4:
                    sql = "SELECT * FROM Appointments WHERE client=?";
                    pst = con.prepareStatement(sql);
                    pst.setString(1, jComboBox5.getSelectedItem().toString());
                    rs=pst.executeQuery();
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    break;
                case 5:
                    sql = "SELECT * FROM Appointments WHERE client=?, date=?";
                    pst = con.prepareStatement(sql);
                    pst.setString(1, jComboBox5.getSelectedItem().toString());
                    pst.setString(2, Date.format(jDateChooser2.getDate()));
                    rs=pst.executeQuery();
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    break;
                case 6:
                    sql = "SELECT * FROM Appointments WHERE client=? AND employee=?";
                    pst = con.prepareStatement(sql);
                    pst.setString(1, jComboBox5.getSelectedItem().toString());
                    pst.setString(2, jComboBox6.getSelectedItem().toString());
                    rs=pst.executeQuery();
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    break;
                    /*DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        int t=model.getRowCount();
        for(int i=t-1;i>=0;i--)
            model.removeRow(i);
                    while(rs.next())
                    {
                        if(rs.getString("client").equalsIgnoreCase(jComboBox5.getSelectedItem().toString())&&rs.getString("client").equalsIgnoreCase(jComboBox6.getSelectedItem().toString()))
                             model.addRow(rs.getString("client"),rs.getString("employee"),rs.getString("Service_Name"),rs.getString("Mobile_No"),rs.getString("Start_Time"),rs.getString("date"));
                    }
                    
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    break;*/
                    case 7:
                    sql = "SELECT * FROM Appointments WHERE employee=?";
                    pst = con.prepareStatement(sql);
                    pst.setString(1, jComboBox6.getSelectedItem().toString());
                    rs=pst.executeQuery();
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    break;
                    case 8:
                    sql = "SELECT * FROM Appointments WHERE client=?, employee=?, date=?";
                    pst = con.prepareStatement(sql);
                    pst.setString(1, jComboBox5.getSelectedItem().toString());
                    pst.setString(2, jComboBox6.getSelectedItem().toString());
                    pst.setString(3, Date.format(jDateChooser2.getDate()));
                    rs=pst.executeQuery();
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    break;
            }
        }
        catch(Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());        
        }  
    }//GEN-LAST:event_SearchActionPerformed

    private void Search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search1ActionPerformed
        showTableData();
    }//GEN-LAST:event_Search1ActionPerformed

    private void jbtnReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnReportsActionPerformed
        Reports rep= new Reports();
         rep.setVisible(true);
    }//GEN-LAST:event_jbtnReportsActionPerformed

    private void jbtnInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInvoiceActionPerformed
        Invoice inv= new Invoice();
         inv.setVisible(true);
    }//GEN-LAST:event_jbtnInvoiceActionPerformed

    private void jbtnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddUserActionPerformed
        NewUser user= new NewUser();
        user.setVisible(true);
    }//GEN-LAST:event_jbtnAddUserActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String name = jComboBox1.getSelectedItem().toString();
        int i;
        String fn="";
        try{
            for(i=0;i<name.length();i++){
            if (name.charAt(i) == ' '){
                fn = name.substring(0, i);
                break;
            }
        } 
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers","root","root");
            String sql = "SELECT * FROM customers WHERE firstName=?";
                    pst=con.prepareStatement(sql);
            pst.setString(1,fn);
            rs=pst.executeQuery();
            while (rs.next()){
            jTextField5.setText(Integer.toString(rs.getInt("contact"))); 
            }
        }
        catch(Exception ex) {
            JOptionPane.showMessageDialog(null, "name not found");        
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
             String sql = "DELETE FROM Appointments WHERE id=?";
            try {
                con=DriverManager.getConnection("jdbc:mysql://localhost:3306/customers","root","root");
                pst=con.prepareStatement(sql);
                pst.setString(1, jTextField1.getText());
                pst.execute();
               jComboBox1.setSelectedItem("");
               jComboBox2.setSelectedItem("");
               jComboBox3.setSelectedItem("");
               jComboBox4.setSelectedItem("");
               jDateChooser1.setDate(null);
               jTextField5.setText("");
               jTextField5.setText("");
              
            JOptionPane.showMessageDialog(null, "Deleted Successfully");
            showTableData();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void showTableData(){
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers","root","root");
            String sql = "SELECT * FROM `Appointments`";
            pst = con.prepareStatement(sql);
            rs=pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
           
        }
        catch(Exception ex) {
            JOptionPane.showMessageDialog(null, ex);        
        }}
    private void updateCombo()
    {
        String sql = "SELECT * FROM employee";
        try{
            pst = con.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                jComboBox2.addItem(rs.getString("first_name"));
                jComboBox6.addItem(rs.getString("first_name"));
            }
        } catch (SQLException ex) {
        Logger.getLogger(Appointments.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    private void updateCombo2()
    {
     String sql = "SELECT * FROM services";
        try{
            pst = con.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                jComboBox3.addItem(rs.getString("serviceName"));
            }
        } catch (SQLException ex) { 
        Logger.getLogger(Appointments.class.getName()).log(Level.SEVERE, null, ex);
    } 
    
    }
        private void updateCombo3()
    {
     String sql = "SELECT * FROM customers";
        try{
            pst = con.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                jComboBox1.addItem(rs.getString("firstName") + " " + rs.getString("lastName"));
                jComboBox5.addItem(rs.getString("firstName") + " " + rs.getString("lastName"));
            }
        } catch (SQLException ex) { 
        Logger.getLogger(Appointments.class.getName()).log(Level.SEVERE, null, ex);
    } 
    
    }
    private void getMobile()
    {
    try{
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/customers","root","root");
            String sql = "SELECT contact FROM customers WHERE (?, firstName) > 0";
            pst = con.prepareStatement(sql);
            pst.setString(1, jTextField5.getText());
            rs=pst.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
           
        }
        catch(Exception ex) {
            JOptionPane.showMessageDialog(null, ex);        
        }  
    
    
    }
     public static Date parseDate(String date) {
         try {
         return new SimpleDateFormat("MMM dd, yyyy").parse(date);
     } catch (ParseException e) {
         return null;
     }
  }
     public void checkNow()
     {
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDateTime now = LocalDateTime.now();
        String time = now.format(dtf);
        String sql = "SELECT * FROM appNotes";
        try{
            pst = con.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                if(time.equals(rs.getString("Date").substring(0, 10))){
                    System.out.println(time);
                    System.out.println(rs.getString("note"));
                    jTextField6.setText(rs.getString("note"));
            }}
        } catch (SQLException ex) { 
        Logger.getLogger(Appointments.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Appointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Appointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Appointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Appointments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Appointments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton Search;
    private javax.swing.JButton Search1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    public final javax.swing.JComboBox<String> jComboBox1 = new javax.swing.JComboBox<>();
    public final javax.swing.JComboBox<String> jComboBox2 = new javax.swing.JComboBox<>();
    private javax.swing.JComboBox<String> jComboBox3;
    public final javax.swing.JComboBox<String> jComboBox4 = new javax.swing.JComboBox<>();
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JButton jbtnAddUser;
    private javax.swing.JButton jbtnCustomer;
    private javax.swing.JButton jbtnEmployee;
    private javax.swing.JButton jbtnInvoice;
    private javax.swing.JButton jbtnReports;
    private javax.swing.JButton jbtnService;
    // End of variables declaration//GEN-END:variables
}
